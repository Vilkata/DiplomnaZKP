{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Velin\\\\diplomna\\\\zk-snarks-private-transactions\\\\zk-snarks-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport PrivateTransaction from './contracts/PrivateTransaction.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport AccountInfo from './components/AccountInfo';\nimport TransactionButton from './components/TransactionButton';\nimport Notification from './components/Notification';\nimport TransactionHistory from './components/TransactionHistory';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [notification, setNotification] = useState({\n    show: false,\n    message: '',\n    variant: 'info'\n  });\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const accounts = await web3.eth.getAccounts();\n          setAccount(accounts[0]);\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = PrivateTransaction.networks[networkId];\n          if (deployedNetwork) {\n            const instance = new web3.eth.Contract(PrivateTransaction.abi, deployedNetwork.address);\n            setWeb3(web3);\n            setContract(instance);\n          } else {\n            setNotification({\n              show: true,\n              message: 'Smart contract not deployed to detected network.',\n              variant: 'warning'\n            });\n          }\n        } catch (error) {\n          setNotification({\n            show: true,\n            message: 'User denied account access or error occurred.',\n            variant: 'danger'\n          });\n        }\n      } else if (window.web3) {\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = PrivateTransaction.networks[networkId];\n        if (deployedNetwork) {\n          const instance = new web3.eth.Contract(PrivateTransaction.abi, deployedNetwork.address);\n          setWeb3(web3);\n          setContract(instance);\n        } else {\n          setNotification({\n            show: true,\n            message: 'Smart contract not deployed to detected network.',\n            variant: 'warning'\n          });\n        }\n      } else {\n        setNotification({\n          show: true,\n          message: 'Non-Ethereum browser detected. You should consider trying MetaMask!',\n          variant: 'danger'\n        });\n      }\n    }\n    load();\n  }, []);\n  const handleTransaction = async () => {\n    if (contract) {\n      const proof = {\n        a: [\"0x0e64930022e04ced60a5bc19af7e2d28ee3e3d751d0758c0f9b5a38aeb923421\", \"0x273966a83726621d75197a90a575ea8e178ab81c6f38f4863ed8e2419b73e45c\"],\n        b: [[\"0x0b4a57dba2dbe02d5322d2d9ed56375d760c8084acef52cdcb59c81ff957dee5\", \"0x0a64161d619965b6e4a06ffd40f6b6705d42cde19047fa53b4bb0a7bded8cf6d\"], [\"0x0884b1939f096c8b49e8f8f591837ff2cda6f3ba88a2ec0a23d2d27eeea40270\", \"0x2a0e717f52320a1dfe9f661856b40006d936d33b591c6eeda6110271ac555a97\"]],\n        c: [\"0x008e6e62e8cea2c8afcc98df04e7b9985e4687034430d66a5734d42f4e372731\", \"0x2ba952e6ab2396144dc72c72c9bff778e18e7fff7e2add745666c58efef0f4d0\"]\n      };\n      const input = [\"0x0000000000000000000000000000000000000000000000000000000000000009\"];\n      try {\n        const receipt = await contract.methods.performPrivateTransaction(proof.a, proof.b, proof.c, input).send({\n          from: account\n        });\n        console.log('Transaction successful', receipt);\n        const tx = await web3.eth.getTransaction(receipt.transactionHash);\n        const block = await web3.eth.getBlock(receipt.blockNumber);\n        const transactionDetails = {\n          hash: receipt.transactionHash,\n          blockNumber: Number(receipt.blockNumber),\n          gasUsed: Number(receipt.gasUsed),\n          from: tx.from,\n          to: tx.to,\n          value: web3.utils.fromWei(tx.value.toString(), 'ether'),\n          gasPrice: web3.utils.fromWei(tx.gasPrice.toString(), 'gwei'),\n          timestamp: new Date(Number(block.timestamp) * 1000).toLocaleString()\n        };\n        setTransactions([...transactions, transactionDetails]);\n        setNotification({\n          show: true,\n          message: 'Transaction successful',\n          variant: 'success'\n        });\n      } catch (error) {\n        console.error('Transaction failed', error);\n        setNotification({\n          show: true,\n          message: 'Transaction failed',\n          variant: 'danger'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(AccountInfo, {\n          account: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TransactionButton, {\n          handleTransaction: handleTransaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), notification.show && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `alert alert-${notification.variant} notification`,\n          role: \"alert\",\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qHBMbN9S6Lxn88tdRh/nXIlayGo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","PrivateTransaction","Container","Row","Col","AccountInfo","TransactionButton","Notification","TransactionHistory","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","web3","setWeb3","transactions","setTransactions","notification","setNotification","show","message","variant","load","window","ethereum","request","method","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","error","currentProvider","handleTransaction","proof","a","b","c","input","receipt","methods","performPrivateTransaction","send","from","console","log","tx","getTransaction","transactionHash","block","getBlock","blockNumber","transactionDetails","hash","Number","gasUsed","to","value","utils","fromWei","toString","gasPrice","timestamp","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","_c","$RefreshReg$"],"sources":["C:/Users/Velin/diplomna/zk-snarks-private-transactions/zk-snarks-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport PrivateTransaction from './contracts/PrivateTransaction.json';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport AccountInfo from './components/AccountInfo';\nimport TransactionButton from './components/TransactionButton';\nimport Notification from './components/Notification';\nimport TransactionHistory from './components/TransactionHistory';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';  // Import the CSS file\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const [transactions, setTransactions] = useState([]);\n  const [notification, setNotification] = useState({ show: false, message: '', variant: 'info' });\n\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const accounts = await web3.eth.getAccounts();\n          setAccount(accounts[0]);\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = PrivateTransaction.networks[networkId];\n          if (deployedNetwork) {\n            const instance = new web3.eth.Contract(\n              PrivateTransaction.abi,\n              deployedNetwork.address,\n            );\n            setWeb3(web3);\n            setContract(instance);\n          } else {\n            setNotification({ show: true, message: 'Smart contract not deployed to detected network.', variant: 'warning' });\n          }\n        } catch (error) {\n          setNotification({ show: true, message: 'User denied account access or error occurred.', variant: 'danger' });\n        }\n      } else if (window.web3) {\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = PrivateTransaction.networks[networkId];\n        if (deployedNetwork) {\n          const instance = new web3.eth.Contract(\n            PrivateTransaction.abi,\n            deployedNetwork.address,\n          );\n          setWeb3(web3);\n          setContract(instance);\n        } else {\n          setNotification({ show: true, message: 'Smart contract not deployed to detected network.', variant: 'warning' });\n        }\n      } else {\n        setNotification({ show: true, message: 'Non-Ethereum browser detected. You should consider trying MetaMask!', variant: 'danger' });\n      }\n    }\n    load();\n  }, []);\n\n  const handleTransaction = async () => {\n    if (contract) {\n      const proof = {\n        a: [\"0x0e64930022e04ced60a5bc19af7e2d28ee3e3d751d0758c0f9b5a38aeb923421\", \"0x273966a83726621d75197a90a575ea8e178ab81c6f38f4863ed8e2419b73e45c\"],\n        b: [[\"0x0b4a57dba2dbe02d5322d2d9ed56375d760c8084acef52cdcb59c81ff957dee5\", \"0x0a64161d619965b6e4a06ffd40f6b6705d42cde19047fa53b4bb0a7bded8cf6d\"], [\"0x0884b1939f096c8b49e8f8f591837ff2cda6f3ba88a2ec0a23d2d27eeea40270\", \"0x2a0e717f52320a1dfe9f661856b40006d936d33b591c6eeda6110271ac555a97\"]],\n        c: [\"0x008e6e62e8cea2c8afcc98df04e7b9985e4687034430d66a5734d42f4e372731\", \"0x2ba952e6ab2396144dc72c72c9bff778e18e7fff7e2add745666c58efef0f4d0\"]\n      };\n      const input = [\"0x0000000000000000000000000000000000000000000000000000000000000009\"];\n      try {\n        const receipt = await contract.methods.performPrivateTransaction(proof.a, proof.b, proof.c, input).send({ from: account });\n        console.log('Transaction successful', receipt);\n\n        const tx = await web3.eth.getTransaction(receipt.transactionHash);\n\n        const block = await web3.eth.getBlock(receipt.blockNumber);\n\n        const transactionDetails = {\n          hash: receipt.transactionHash,\n          blockNumber: Number(receipt.blockNumber),\n          gasUsed: Number(receipt.gasUsed),\n          from: tx.from,\n          to: tx.to,\n          value: web3.utils.fromWei(tx.value.toString(), 'ether'),\n          gasPrice: web3.utils.fromWei(tx.gasPrice.toString(), 'gwei'),\n          timestamp: new Date(Number(block.timestamp) * 1000).toLocaleString()\n        };\n\n        setTransactions([...transactions, transactionDetails]);\n        setNotification({ show: true, message: 'Transaction successful', variant: 'success' });\n      } catch (error) {\n        console.error('Transaction failed', error);\n        setNotification({ show: true, message: 'Transaction failed', variant: 'danger' });\n      }\n    }\n  };\n\n  return (\n    <Container className=\"container\">\n      <Row>\n        <Col>\n          <AccountInfo account={account} />\n          <TransactionButton handleTransaction={handleTransaction} />\n          {notification.show && (\n            <div className={`alert alert-${notification.variant} notification`} role=\"alert\">\n              {notification.message}\n            </div>\n          )}\n          <TransactionHistory transactions={transactions} />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAO,sCAAsC;AAC7C,OAAO,WAAW,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC;IAAEwB,IAAI,EAAE,KAAK;IAAEC,OAAO,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAO,CAAC,CAAC;EAE/F3B,SAAS,CAAC,MAAM;IACd,eAAe4B,IAAIA,CAAA,EAAG;MACpB,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMX,IAAI,GAAG,IAAIjB,IAAI,CAAC2B,MAAM,CAACC,QAAQ,CAAC;QACtC,IAAI;UACF,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;UAChE,MAAMC,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAG,CAACC,WAAW,CAAC,CAAC;UAC7CnB,UAAU,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAAC;UACvB,MAAMG,SAAS,GAAG,MAAMjB,IAAI,CAACe,GAAG,CAACG,GAAG,CAACC,KAAK,CAAC,CAAC;UAC5C,MAAMC,eAAe,GAAGpC,kBAAkB,CAACqC,QAAQ,CAACJ,SAAS,CAAC;UAC9D,IAAIG,eAAe,EAAE;YACnB,MAAME,QAAQ,GAAG,IAAItB,IAAI,CAACe,GAAG,CAACQ,QAAQ,CACpCvC,kBAAkB,CAACwC,GAAG,EACtBJ,eAAe,CAACK,OAClB,CAAC;YACDxB,OAAO,CAACD,IAAI,CAAC;YACbD,WAAW,CAACuB,QAAQ,CAAC;UACvB,CAAC,MAAM;YACLjB,eAAe,CAAC;cAAEC,IAAI,EAAE,IAAI;cAAEC,OAAO,EAAE,kDAAkD;cAAEC,OAAO,EAAE;YAAU,CAAC,CAAC;UAClH;QACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;UACdrB,eAAe,CAAC;YAAEC,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE,+CAA+C;YAAEC,OAAO,EAAE;UAAS,CAAC,CAAC;QAC9G;MACF,CAAC,MAAM,IAAIE,MAAM,CAACV,IAAI,EAAE;QACtB,MAAMA,IAAI,GAAG,IAAIjB,IAAI,CAAC2B,MAAM,CAACV,IAAI,CAAC2B,eAAe,CAAC;QAClD,MAAMb,QAAQ,GAAG,MAAMd,IAAI,CAACe,GAAG,CAACC,WAAW,CAAC,CAAC;QAC7CnB,UAAU,CAACiB,QAAQ,CAAC,CAAC,CAAC,CAAC;QACvB,MAAMG,SAAS,GAAG,MAAMjB,IAAI,CAACe,GAAG,CAACG,GAAG,CAACC,KAAK,CAAC,CAAC;QAC5C,MAAMC,eAAe,GAAGpC,kBAAkB,CAACqC,QAAQ,CAACJ,SAAS,CAAC;QAC9D,IAAIG,eAAe,EAAE;UACnB,MAAME,QAAQ,GAAG,IAAItB,IAAI,CAACe,GAAG,CAACQ,QAAQ,CACpCvC,kBAAkB,CAACwC,GAAG,EACtBJ,eAAe,CAACK,OAClB,CAAC;UACDxB,OAAO,CAACD,IAAI,CAAC;UACbD,WAAW,CAACuB,QAAQ,CAAC;QACvB,CAAC,MAAM;UACLjB,eAAe,CAAC;YAAEC,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAE,kDAAkD;YAAEC,OAAO,EAAE;UAAU,CAAC,CAAC;QAClH;MACF,CAAC,MAAM;QACLH,eAAe,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAE,qEAAqE;UAAEC,OAAO,EAAE;QAAS,CAAC,CAAC;MACpI;IACF;IACAC,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI9B,QAAQ,EAAE;MACZ,MAAM+B,KAAK,GAAG;QACZC,CAAC,EAAE,CAAC,oEAAoE,EAAE,oEAAoE,CAAC;QAC/IC,CAAC,EAAE,CAAC,CAAC,oEAAoE,EAAE,oEAAoE,CAAC,EAAE,CAAC,oEAAoE,EAAE,oEAAoE,CAAC,CAAC;QAC/RC,CAAC,EAAE,CAAC,oEAAoE,EAAE,oEAAoE;MAChJ,CAAC;MACD,MAAMC,KAAK,GAAG,CAAC,oEAAoE,CAAC;MACpF,IAAI;QACF,MAAMC,OAAO,GAAG,MAAMpC,QAAQ,CAACqC,OAAO,CAACC,yBAAyB,CAACP,KAAK,CAACC,CAAC,EAAED,KAAK,CAACE,CAAC,EAAEF,KAAK,CAACG,CAAC,EAAEC,KAAK,CAAC,CAACI,IAAI,CAAC;UAAEC,IAAI,EAAE1C;QAAQ,CAAC,CAAC;QAC1H2C,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEN,OAAO,CAAC;QAE9C,MAAMO,EAAE,GAAG,MAAMzC,IAAI,CAACe,GAAG,CAAC2B,cAAc,CAACR,OAAO,CAACS,eAAe,CAAC;QAEjE,MAAMC,KAAK,GAAG,MAAM5C,IAAI,CAACe,GAAG,CAAC8B,QAAQ,CAACX,OAAO,CAACY,WAAW,CAAC;QAE1D,MAAMC,kBAAkB,GAAG;UACzBC,IAAI,EAAEd,OAAO,CAACS,eAAe;UAC7BG,WAAW,EAAEG,MAAM,CAACf,OAAO,CAACY,WAAW,CAAC;UACxCI,OAAO,EAAED,MAAM,CAACf,OAAO,CAACgB,OAAO,CAAC;UAChCZ,IAAI,EAAEG,EAAE,CAACH,IAAI;UACba,EAAE,EAAEV,EAAE,CAACU,EAAE;UACTC,KAAK,EAAEpD,IAAI,CAACqD,KAAK,CAACC,OAAO,CAACb,EAAE,CAACW,KAAK,CAACG,QAAQ,CAAC,CAAC,EAAE,OAAO,CAAC;UACvDC,QAAQ,EAAExD,IAAI,CAACqD,KAAK,CAACC,OAAO,CAACb,EAAE,CAACe,QAAQ,CAACD,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC;UAC5DE,SAAS,EAAE,IAAIC,IAAI,CAACT,MAAM,CAACL,KAAK,CAACa,SAAS,CAAC,GAAG,IAAI,CAAC,CAACE,cAAc,CAAC;QACrE,CAAC;QAEDxD,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE6C,kBAAkB,CAAC,CAAC;QACtD1C,eAAe,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAE,wBAAwB;UAAEC,OAAO,EAAE;QAAU,CAAC,CAAC;MACxF,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CrB,eAAe,CAAC;UAAEC,IAAI,EAAE,IAAI;UAAEC,OAAO,EAAE,oBAAoB;UAAEC,OAAO,EAAE;QAAS,CAAC,CAAC;MACnF;IACF;EACF,CAAC;EAED,oBACEf,OAAA,CAACR,SAAS;IAAC2E,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC9BpE,OAAA,CAACP,GAAG;MAAA2E,QAAA,eACFpE,OAAA,CAACN,GAAG;QAAA0E,QAAA,gBACFpE,OAAA,CAACL,WAAW;UAACQ,OAAO,EAAEA;QAAQ;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjCxE,OAAA,CAACJ,iBAAiB;UAACuC,iBAAiB,EAAEA;QAAkB;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1D7D,YAAY,CAACE,IAAI,iBAChBb,OAAA;UAAKmE,SAAS,EAAG,eAAcxD,YAAY,CAACI,OAAQ,eAAe;UAAC0D,IAAI,EAAC,OAAO;UAAAL,QAAA,EAC7EzD,YAAY,CAACG;QAAO;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CACN,eACDxE,OAAA,CAACF,kBAAkB;UAACW,YAAY,EAAEA;QAAa;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACtE,EAAA,CAzGQD,GAAG;AAAAyE,EAAA,GAAHzE,GAAG;AA2GZ,eAAeA,GAAG;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}