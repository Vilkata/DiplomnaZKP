{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Velin\\\\diplomna\\\\zk-snarks-private-transactions\\\\zk-snarks-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport PrivateTransaction from './contracts/PrivateTransaction.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const accounts = await web3.eth.getAccounts();\n          setAccount(accounts[0]);\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = PrivateTransaction.networks[networkId];\n          if (deployedNetwork) {\n            const instance = new web3.eth.Contract(PrivateTransaction.abi, deployedNetwork.address);\n            setWeb3(web3);\n            setContract(instance);\n          } else {\n            console.error('Smart contract not deployed to detected network.');\n          }\n        } catch (error) {\n          console.error('User denied account access or error occurred:', error);\n        }\n      } else if (window.web3) {\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = PrivateTransaction.networks[networkId];\n        if (deployedNetwork) {\n          const instance = new web3.eth.Contract(PrivateTransaction.abi, deployedNetwork.address);\n          setWeb3(web3);\n          setContract(instance);\n        } else {\n          console.error('Smart contract not deployed to detected network.');\n        }\n      } else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n    }\n    load();\n  }, []);\n  const handleTransaction = async () => {\n    if (contract) {\n      const proof = {\n        a: [\"0x0e64930022e04ced60a5bc19af7e2d28ee3e3d751d0758c0f9b5a38aeb923421\", \"0x273966a83726621d75197a90a575ea8e178ab81c6f38f4863ed8e2419b73e45c\"],\n        b: [[\"0x0b4a57dba2dbe02d5322d2d9ed56375d760c8084acef52cdcb59c81ff957dee5\", \"0x0a64161d619965b6e4a06ffd40f6b6705d42cde19047fa53b4bb0a7bded8cf6d\"], [\"0x0884b1939f096c8b49e8f8f591837ff2cda6f3ba88a2ec0a23d2d27eeea40270\", \"0x2a0e717f52320a1dfe9f661856b40006d936d33b591c6eeda6110271ac555a97\"]],\n        c: [\"0x008e6e62e8cea2c8afcc98df04e7b9985e4687034430d66a5734d42f4e372731\", \"0x2ba952e6ab2396144dc72c72c9bff778e18e7fff7e2add745666c58efef0f4d0\"]\n      };\n      const input = [\"0x0000000000000000000000000000000000000000000000000000000000000009\"];\n      try {\n        await contract.methods.performPrivateTransaction(proof.a, proof.b, proof.c, input).send({\n          from: account\n        });\n        console.log('Transaction successful');\n      } catch (error) {\n        console.error('Transaction failed', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"zk-SNARKs Private Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTransaction,\n      children: \"Perform Private Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2V8dKqp3S2bFvy8Jx6ASLsdIZQM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Web3","PrivateTransaction","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","web3","setWeb3","load","window","ethereum","request","method","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","console","error","currentProvider","log","handleTransaction","proof","a","b","c","input","methods","performPrivateTransaction","send","from","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Velin/diplomna/zk-snarks-private-transactions/zk-snarks-frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Web3 from 'web3';\nimport PrivateTransaction from './contracts/PrivateTransaction.json';\n\nfunction App() {\n  const [account, setAccount] = useState('');\n  const [contract, setContract] = useState(null);\n  const [web3, setWeb3] = useState(null);\n\n  useEffect(() => {\n    async function load() {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const accounts = await web3.eth.getAccounts();\n          setAccount(accounts[0]);\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = PrivateTransaction.networks[networkId];\n          if (deployedNetwork) {\n            const instance = new web3.eth.Contract(\n              PrivateTransaction.abi,\n              deployedNetwork.address,\n            );\n            setWeb3(web3);\n            setContract(instance);\n          } else {\n            console.error('Smart contract not deployed to detected network.');\n          }\n        } catch (error) {\n          console.error('User denied account access or error occurred:', error);\n        }\n      } else if (window.web3) {\n        const web3 = new Web3(window.web3.currentProvider);\n        const accounts = await web3.eth.getAccounts();\n        setAccount(accounts[0]);\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = PrivateTransaction.networks[networkId];\n        if (deployedNetwork) {\n          const instance = new web3.eth.Contract(\n            PrivateTransaction.abi,\n            deployedNetwork.address,\n          );\n          setWeb3(web3);\n          setContract(instance);\n        } else {\n          console.error('Smart contract not deployed to detected network.');\n        }\n      } else {\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n      }\n    }\n    load();\n  }, []);\n\n  const handleTransaction = async () => {\n    if (contract) {\n      const proof = {\n        a: [\"0x0e64930022e04ced60a5bc19af7e2d28ee3e3d751d0758c0f9b5a38aeb923421\", \"0x273966a83726621d75197a90a575ea8e178ab81c6f38f4863ed8e2419b73e45c\"],\n        b: [[\"0x0b4a57dba2dbe02d5322d2d9ed56375d760c8084acef52cdcb59c81ff957dee5\", \"0x0a64161d619965b6e4a06ffd40f6b6705d42cde19047fa53b4bb0a7bded8cf6d\"], [\"0x0884b1939f096c8b49e8f8f591837ff2cda6f3ba88a2ec0a23d2d27eeea40270\", \"0x2a0e717f52320a1dfe9f661856b40006d936d33b591c6eeda6110271ac555a97\"]],\n        c: [\"0x008e6e62e8cea2c8afcc98df04e7b9985e4687034430d66a5734d42f4e372731\", \"0x2ba952e6ab2396144dc72c72c9bff778e18e7fff7e2add745666c58efef0f4d0\"]\n      };\n      const input = [\"0x0000000000000000000000000000000000000000000000000000000000000009\"];\n      try {\n        await contract.methods.performPrivateTransaction(proof.a, proof.b, proof.c, input).send({ from: account });\n        console.log('Transaction successful');\n      } catch (error) {\n        console.error('Transaction failed', error);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h1>zk-SNARKs Private Transactions</h1>\n      <p>Account: {account}</p>\n      <button onClick={handleTransaction}>Perform Private Transaction</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}